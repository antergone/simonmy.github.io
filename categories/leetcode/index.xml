<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>LeetCode - 分类 - Simon (Yu Ma)</title><link>https://simonmy.com/categories/leetcode/</link><description>LeetCode - 分类 - Simon (Yu Ma)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 21 May 2022 02:30:00 +0800</lastBuildDate><atom:link href="https://simonmy.com/categories/leetcode/" rel="self" type="application/rss+xml"/><item><title>3. Longest Substring Without Repeating Characters</title><link>https://simonmy.com/posts/leetcode/longest-substring-without-repeating-characters/</link><pubDate>Sat, 21 May 2022 02:30:00 +0800</pubDate><author>作者</author><guid>https://simonmy.com/posts/leetcode/longest-substring-without-repeating-characters/</guid><description><![CDATA[ https://leetcode.com/problems/longest-substring-without-repeating-characters/
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  implSolution{pubfn length_of_longest_substring(s: String)-&gt; i32 {usestd::cmp::max;usestd::collections::HashMap;letmutm=HashMap::new();letmutans=0;letmutbefore=-1;letmutcurrent=0;forcins.chars(){ifletSome(last)=m.insert(c,current){before=max(before,last);}ans=max(ans,current-before);current+=1;}ans}}pubstruct Solution;#[cfg(test)]mod tests{usecrate::solutions::p0003_longest_substring_without_repeating_characters::Solution;#[test]fn test(){// let c = &#39;c&#39; as usize; // println!(&#34;{}&#34;, c) letlength=Solution::length_of_longest_substring(&#34;pwwkew&#34;.to_string());println!(&#34;{}&#34;,length)}}  ]]></description></item><item><title>206. Reverse Linked List</title><link>https://simonmy.com/posts/leetcode/reverse-linked-list/</link><pubDate>Fri, 20 May 2022 14:30:00 +0800</pubDate><author>作者</author><guid>https://simonmy.com/posts/leetcode/reverse-linked-list/</guid><description><![CDATA[ https://leetcode.com/problems/reverse-linked-list/
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  usecrate::data_struct::linked_list::ListNode;implSolution{pubfn reverse_list(head: Option&lt;Box&lt;ListNode&gt;&gt;)-&gt; Option&lt;Box&lt;ListNode&gt;&gt;{letmutcurr=head;letmutnext=None;whileletSome(mutinner)=curr{curr=inner.next.take();inner.next=next;next=Some(inner);}next}}pubstruct Solution;#[cfg(test)]mod tests{usecrate::data_struct::linked_list::to_list;usecrate::solutions::p0206_reverse_linked_list::Solution;#[test]fn test(){letl1=vec![2,7,11,15];letres=Solution::reverse_list(to_list(l1));println!(&#34;{:?}&#34;,res)}}  ]]></description></item><item><title>2. Add Two Numbers</title><link>https://simonmy.com/posts/leetcode/add-two-numbers/</link><pubDate>Fri, 20 May 2022 14:10:00 +0800</pubDate><author>作者</author><guid>https://simonmy.com/posts/leetcode/add-two-numbers/</guid><description><![CDATA[ https://leetcode.com/problems/add-two-numbers/
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52  usecrate::data_struct::linked_list::ListNode;implSolution{pubfn add_two_numbers(l1: Option&lt;Box&lt;ListNode&gt;&gt;,l2: Option&lt;Box&lt;ListNode&gt;&gt;,)-&gt; Option&lt;Box&lt;ListNode&gt;&gt;{letmutdummy=Box::new(ListNode::new(0));letmutl1=l1.as_ref();letmutl2=l2.as_ref();letmutcurrent=dummy.as_mut();letmutcarry=0;whilel1.is_some()||l2.is_some()||carry!=0{letl1_value=l1.map_or(0,|n|n.val);letl2_value=l2.map_or(0,|n|n.val);l1=l1.and_then(|n|n.next.as_ref());l2=l2.and_then(|n|n.next.as_ref());letsum=carry+l1_value+l2_value;letcurrent_value;ifsum&gt;9{current_value=sum-10;carry=1;}else{carry=0;current_value=sum;}current.next=Some(Box::new(ListNode::new(current_value)));current=current.next.as_mut().unwrap().as_mut();}returndummy.next;}}pubstruct Solution;#[cfg(test)]mod tests{usecrate::{solutions::p0002_add_two_numbers::Solution,data_struct::linked_list::ListNode};usecrate::data_struct::linked_list::to_list;#[test]fn test(){assert_eq!(to_list(vec![7,0,8]),Solution::add_two_numbers(to_list(vec![2,4,3]),to_list(vec![5,6,4])));}}  ]]></description></item><item><title>1. Two Sum</title><link>https://simonmy.com/posts/leetcode/two-sum/</link><pubDate>Sun, 08 May 2022 18:00:00 +0800</pubDate><author>作者</author><guid>https://simonmy.com/posts/leetcode/two-sum/</guid><description><![CDATA[ LeetCode: https://leetcode.com/problems/two-sum/
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  implSolution{pubfn two_sum(nums: Vec&lt;i32&gt;,target: i32)-&gt; Vec&lt;i32&gt;{letmutresult_map: HashMap&lt;i32,i32&gt;=HashMap::new();for(idx,val)innums.iter().enumerate(){matchresult_map.get(&amp;(target-*val)){Some(&amp;idx2)=&gt;returnvec![idx2,idxasi32],None=&gt;result_map.insert(*val,idxasi32),};}returnvec![];}}pubstruct Solution;#[cfg(test)]mod tests{usecrate::solutions::p0001_two_sum::Solution;#[test]fn test(){letl1=vec![2,7,11,15];letres=Solution::two_sum(l1,9);println!(&#34;{:?}&#34;,res)}}  ]]></description></item></channel></rss>